<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="main.java.edu.nju.dao.RepositoryMapper">
  <resultMap id="BaseResultMap" type="main.java.edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="main.java.edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="main.java.edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="main.java.edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.java.edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="main.java.edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="main.java.edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="main.java.edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="main.java.edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="main.java.edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="edu.nju.pojo.Repository">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="full_name" jdbcType="CHAR" property="fullName" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="owner_name" jdbcType="CHAR" property="ownerName" />
    <result column="language" jdbcType="CHAR" property="language" />
    <result column="fork" jdbcType="BIT" property="fork" />
    <result column="has_issues" jdbcType="BIT" property="hasIssues" />
    <result column="has_downloads" jdbcType="BIT" property="hasDownloads" />
    <result column="has_wiki" jdbcType="BIT" property="hasWiki" />
    <result column="has_pages" jdbcType="BIT" property="hasPages" />
    <result column="open_issues_count" jdbcType="INTEGER" property="openIssuesCount" />
    <result column="watchers_count" jdbcType="INTEGER" property="watchersCount" />
    <result column="clone_url" jdbcType="CHAR" property="cloneUrl" />
    <result column="html_url" jdbcType="CHAR" property="htmlUrl" />
    <result column="homepage" jdbcType="CHAR" property="homepage" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="pushed_at" jdbcType="TIMESTAMP" property="pushedAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="default_branch" jdbcType="CHAR" property="defaultBranch" />
    <result column="stargazers_count" jdbcType="INTEGER" property="stargazersCount" />
    <result column="forks_count" jdbcType="INTEGER" property="forksCount" />
    <result column="subscribers_count" jdbcType="INTEGER" property="subscribersCount" />
    <result column="contributors_login" jdbcType="VARCHAR" property="contributorsLogin" />
    <result column="collaborators_login" jdbcType="VARCHAR" property="collaboratorsLogin" />
    <result column="languages_names" jdbcType="VARCHAR" property="languagesNames" />
    <result column="languages_counts" jdbcType="VARCHAR" property="languagesCounts" />
    <result column="size_score" jdbcType="DOUBLE" property="sizeScore" />
    <result column="scale_score" jdbcType="DOUBLE" property="scaleScore" />
    <result column="promising_score" jdbcType="DOUBLE" property="promisingScore" />
    <result column="participation_score" jdbcType="DOUBLE" property="participationScore" />
    <result column="hot_score" jdbcType="DOUBLE" property="hotScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, full_name, name, owner_name, language, fork, has_issues, has_downloads, has_wiki, 
    has_pages, open_issues_count, watchers_count, clone_url, html_url, homepage, description, 
    created_at, pushed_at, updated_at, size, default_branch, stargazers_count, forks_count, 
    subscribers_count, contributors_login, collaborators_login, languages_names, languages_counts, 
    size_score, scale_score, promising_score, participation_score, hot_score
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from repository
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from repository
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.pojo.Repository">
    insert into repository (id, full_name, name, 
      owner_name, language, fork, has_issues, 
      has_downloads, has_wiki, has_pages, 
      open_issues_count, watchers_count, clone_url, 
      html_url, homepage, description, 
      created_at, pushed_at, updated_at, 
      size, default_branch, stargazers_count, 
      forks_count, subscribers_count, contributors_login, 
      collaborators_login, languages_names, languages_counts, 
      size_score, scale_score, promising_score, 
      participation_score, hot_score)
    values (#{id,jdbcType=INTEGER}, #{fullName,jdbcType=CHAR}, #{name,jdbcType=CHAR}, 
      #{ownerName,jdbcType=CHAR}, #{language,jdbcType=CHAR}, #{fork,jdbcType=BIT}, #{hasIssues,jdbcType=BIT}, 
      #{hasDownloads,jdbcType=BIT}, #{hasWiki,jdbcType=BIT}, #{hasPages,jdbcType=BIT}, 
      #{openIssuesCount,jdbcType=INTEGER}, #{watchersCount,jdbcType=INTEGER}, #{cloneUrl,jdbcType=CHAR}, 
      #{htmlUrl,jdbcType=CHAR}, #{homepage,jdbcType=CHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{pushedAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{size,jdbcType=INTEGER}, #{defaultBranch,jdbcType=CHAR}, #{stargazersCount,jdbcType=INTEGER}, 
      #{forksCount,jdbcType=INTEGER}, #{subscribersCount,jdbcType=INTEGER}, #{contributorsLogin,jdbcType=VARCHAR}, 
      #{collaboratorsLogin,jdbcType=VARCHAR}, #{languagesNames,jdbcType=VARCHAR}, #{languagesCounts,jdbcType=VARCHAR}, 
      #{sizeScore,jdbcType=DOUBLE}, #{scaleScore,jdbcType=DOUBLE}, #{promisingScore,jdbcType=DOUBLE}, 
      #{participationScore,jdbcType=DOUBLE}, #{hotScore,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.pojo.Repository">
    insert into repository
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fullName != null">
        full_name,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="ownerName != null">
        owner_name,
      </if>
      <if test="language != null">
        language,
      </if>
      <if test="fork != null">
        fork,
      </if>
      <if test="hasIssues != null">
        has_issues,
      </if>
      <if test="hasDownloads != null">
        has_downloads,
      </if>
      <if test="hasWiki != null">
        has_wiki,
      </if>
      <if test="hasPages != null">
        has_pages,
      </if>
      <if test="openIssuesCount != null">
        open_issues_count,
      </if>
      <if test="watchersCount != null">
        watchers_count,
      </if>
      <if test="cloneUrl != null">
        clone_url,
      </if>
      <if test="htmlUrl != null">
        html_url,
      </if>
      <if test="homepage != null">
        homepage,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="pushedAt != null">
        pushed_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="defaultBranch != null">
        default_branch,
      </if>
      <if test="stargazersCount != null">
        stargazers_count,
      </if>
      <if test="forksCount != null">
        forks_count,
      </if>
      <if test="subscribersCount != null">
        subscribers_count,
      </if>
      <if test="contributorsLogin != null">
        contributors_login,
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login,
      </if>
      <if test="languagesNames != null">
        languages_names,
      </if>
      <if test="languagesCounts != null">
        languages_counts,
      </if>
      <if test="sizeScore != null">
        size_score,
      </if>
      <if test="scaleScore != null">
        scale_score,
      </if>
      <if test="promisingScore != null">
        promising_score,
      </if>
      <if test="participationScore != null">
        participation_score,
      </if>
      <if test="hotScore != null">
        hot_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fullName != null">
        #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        #{hotScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.pojo.Repository">
    update repository
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="ownerName != null">
        owner_name = #{ownerName,jdbcType=CHAR},
      </if>
      <if test="language != null">
        language = #{language,jdbcType=CHAR},
      </if>
      <if test="fork != null">
        fork = #{fork,jdbcType=BIT},
      </if>
      <if test="hasIssues != null">
        has_issues = #{hasIssues,jdbcType=BIT},
      </if>
      <if test="hasDownloads != null">
        has_downloads = #{hasDownloads,jdbcType=BIT},
      </if>
      <if test="hasWiki != null">
        has_wiki = #{hasWiki,jdbcType=BIT},
      </if>
      <if test="hasPages != null">
        has_pages = #{hasPages,jdbcType=BIT},
      </if>
      <if test="openIssuesCount != null">
        open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      </if>
      <if test="watchersCount != null">
        watchers_count = #{watchersCount,jdbcType=INTEGER},
      </if>
      <if test="cloneUrl != null">
        clone_url = #{cloneUrl,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null">
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="homepage != null">
        homepage = #{homepage,jdbcType=CHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="pushedAt != null">
        pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=INTEGER},
      </if>
      <if test="defaultBranch != null">
        default_branch = #{defaultBranch,jdbcType=CHAR},
      </if>
      <if test="stargazersCount != null">
        stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      </if>
      <if test="forksCount != null">
        forks_count = #{forksCount,jdbcType=INTEGER},
      </if>
      <if test="subscribersCount != null">
        subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      </if>
      <if test="contributorsLogin != null">
        contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="collaboratorsLogin != null">
        collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      </if>
      <if test="languagesNames != null">
        languages_names = #{languagesNames,jdbcType=VARCHAR},
      </if>
      <if test="languagesCounts != null">
        languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      </if>
      <if test="sizeScore != null">
        size_score = #{sizeScore,jdbcType=DOUBLE},
      </if>
      <if test="scaleScore != null">
        scale_score = #{scaleScore,jdbcType=DOUBLE},
      </if>
      <if test="promisingScore != null">
        promising_score = #{promisingScore,jdbcType=DOUBLE},
      </if>
      <if test="participationScore != null">
        participation_score = #{participationScore,jdbcType=DOUBLE},
      </if>
      <if test="hotScore != null">
        hot_score = #{hotScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.pojo.Repository">
    update repository
    set full_name = #{fullName,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      owner_name = #{ownerName,jdbcType=CHAR},
      language = #{language,jdbcType=CHAR},
      fork = #{fork,jdbcType=BIT},
      has_issues = #{hasIssues,jdbcType=BIT},
      has_downloads = #{hasDownloads,jdbcType=BIT},
      has_wiki = #{hasWiki,jdbcType=BIT},
      has_pages = #{hasPages,jdbcType=BIT},
      open_issues_count = #{openIssuesCount,jdbcType=INTEGER},
      watchers_count = #{watchersCount,jdbcType=INTEGER},
      clone_url = #{cloneUrl,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      homepage = #{homepage,jdbcType=CHAR},
      description = #{description,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      pushed_at = #{pushedAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      size = #{size,jdbcType=INTEGER},
      default_branch = #{defaultBranch,jdbcType=CHAR},
      stargazers_count = #{stargazersCount,jdbcType=INTEGER},
      forks_count = #{forksCount,jdbcType=INTEGER},
      subscribers_count = #{subscribersCount,jdbcType=INTEGER},
      contributors_login = #{contributorsLogin,jdbcType=VARCHAR},
      collaborators_login = #{collaboratorsLogin,jdbcType=VARCHAR},
      languages_names = #{languagesNames,jdbcType=VARCHAR},
      languages_counts = #{languagesCounts,jdbcType=VARCHAR},
      size_score = #{sizeScore,jdbcType=DOUBLE},
      scale_score = #{scaleScore,jdbcType=DOUBLE},
      promising_score = #{promisingScore,jdbcType=DOUBLE},
      participation_score = #{participationScore,jdbcType=DOUBLE},
      hot_score = #{hotScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.nju.dao.IUserDao" >
  <resultMap id="BaseResultMap" type="edu.nju.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="login" property="login" jdbcType="CHAR" />
    <result column="html_url" property="htmlUrl" jdbcType="CHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="avatar_url" property="avatarUrl" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="CHAR" />
    <result column="location" property="location" jdbcType="CHAR" />
    <result column="email" property="email" jdbcType="CHAR" />
    <result column="blog" property="blog" jdbcType="CHAR" />
    <result column="company" property="company" jdbcType="CHAR" />
    <result column="contributions_fullname" property="contributionsFullname" jdbcType="VARCHAR" />
    <result column="collaboration_fullname" property="collaborationFullname" jdbcType="VARCHAR" />
    <result column="followers_name" property="followersName" jdbcType="VARCHAR" />
    <result column="following_name" property="followingName" jdbcType="VARCHAR" />
    <result column="repos_fullname" property="reposFullname" jdbcType="VARCHAR" />
    <result column="public_repos" property="publicRepos" jdbcType="INTEGER" />
    <result column="pubilc_gists" property="pubilcGists" jdbcType="INTEGER" />
    <result column="followers" property="followers" jdbcType="INTEGER" />
    <result column="following" property="following" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="popular_score" property="popularScore" jdbcType="DOUBLE" />
    <result column="teamwork_score" property="teamworkScore" jdbcType="DOUBLE" />
    <result column="liveness_score" property="livenessScore" jdbcType="DOUBLE" />
    <result column="experience_score" property="experienceScore" jdbcType="DOUBLE" />
    <result column="quantity_score" property="quantityScore" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, login, html_url, type, avatar_url, name, location, email, blog, company, contributions_fullname, 
    collaboration_fullname, followers_name, following_name, repos_fullname, public_repos, 
    pubilc_gists, followers, following, created_at, updated_at, popular_score, teamwork_score, 
    liveness_score, experience_score, quantity_score
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.nju.model.User" >
    insert into user (id, login, html_url, 
      type, avatar_url, name, location, 
      email, blog, company, contributions_fullname, 
      collaboration_fullname, followers_name, following_name, 
      repos_fullname, public_repos, pubilc_gists, 
      followers, following, created_at, 
      updated_at, popular_score, teamwork_score, 
      liveness_score, experience_score, quantity_score
      )
    values (#{id,jdbcType=INTEGER}, #{login,jdbcType=CHAR}, #{htmlUrl,jdbcType=CHAR}, 
      #{type,jdbcType=CHAR}, #{avatarUrl,jdbcType=CHAR}, #{name,jdbcType=CHAR}, #{location,jdbcType=CHAR}, 
      #{email,jdbcType=CHAR}, #{blog,jdbcType=CHAR}, #{company,jdbcType=CHAR}, #{contributionsFullname,jdbcType=VARCHAR}, 
      #{collaborationFullname,jdbcType=VARCHAR}, #{followersName,jdbcType=VARCHAR}, #{followingName,jdbcType=VARCHAR}, 
      #{reposFullname,jdbcType=VARCHAR}, #{publicRepos,jdbcType=INTEGER}, #{pubilcGists,jdbcType=INTEGER}, 
      #{followers,jdbcType=INTEGER}, #{following,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{popularScore,jdbcType=DOUBLE}, #{teamworkScore,jdbcType=DOUBLE}, 
      #{livenessScore,jdbcType=DOUBLE}, #{experienceScore,jdbcType=DOUBLE}, #{quantityScore,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.nju.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="login != null" >
        login,
      </if>
      <if test="htmlUrl != null" >
        html_url,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="avatarUrl != null" >
        avatar_url,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="location != null" >
        location,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="blog != null" >
        blog,
      </if>
      <if test="company != null" >
        company,
      </if>
      <if test="contributionsFullname != null" >
        contributions_fullname,
      </if>
      <if test="collaborationFullname != null" >
        collaboration_fullname,
      </if>
      <if test="followersName != null" >
        followers_name,
      </if>
      <if test="followingName != null" >
        following_name,
      </if>
      <if test="reposFullname != null" >
        repos_fullname,
      </if>
      <if test="publicRepos != null" >
        public_repos,
      </if>
      <if test="pubilcGists != null" >
        pubilc_gists,
      </if>
      <if test="followers != null" >
        followers,
      </if>
      <if test="following != null" >
        following,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="popularScore != null" >
        popular_score,
      </if>
      <if test="teamworkScore != null" >
        teamwork_score,
      </if>
      <if test="livenessScore != null" >
        liveness_score,
      </if>
      <if test="experienceScore != null" >
        experience_score,
      </if>
      <if test="quantityScore != null" >
        quantity_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="login != null" >
        #{login,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null" >
        #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="avatarUrl != null" >
        #{avatarUrl,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=CHAR},
      </if>
      <if test="location != null" >
        #{location,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
      <if test="blog != null" >
        #{blog,jdbcType=CHAR},
      </if>
      <if test="company != null" >
        #{company,jdbcType=CHAR},
      </if>
      <if test="contributionsFullname != null" >
        #{contributionsFullname,jdbcType=VARCHAR},
      </if>
      <if test="collaborationFullname != null" >
        #{collaborationFullname,jdbcType=VARCHAR},
      </if>
      <if test="followersName != null" >
        #{followersName,jdbcType=VARCHAR},
      </if>
      <if test="followingName != null" >
        #{followingName,jdbcType=VARCHAR},
      </if>
      <if test="reposFullname != null" >
        #{reposFullname,jdbcType=VARCHAR},
      </if>
      <if test="publicRepos != null" >
        #{publicRepos,jdbcType=INTEGER},
      </if>
      <if test="pubilcGists != null" >
        #{pubilcGists,jdbcType=INTEGER},
      </if>
      <if test="followers != null" >
        #{followers,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        #{following,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="popularScore != null" >
        #{popularScore,jdbcType=DOUBLE},
      </if>
      <if test="teamworkScore != null" >
        #{teamworkScore,jdbcType=DOUBLE},
      </if>
      <if test="livenessScore != null" >
        #{livenessScore,jdbcType=DOUBLE},
      </if>
      <if test="experienceScore != null" >
        #{experienceScore,jdbcType=DOUBLE},
      </if>
      <if test="quantityScore != null" >
        #{quantityScore,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.nju.model.User" >
    update user
    <set >
      <if test="login != null" >
        login = #{login,jdbcType=CHAR},
      </if>
      <if test="htmlUrl != null" >
        html_url = #{htmlUrl,jdbcType=CHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="avatarUrl != null" >
        avatar_url = #{avatarUrl,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="blog != null" >
        blog = #{blog,jdbcType=CHAR},
      </if>
      <if test="company != null" >
        company = #{company,jdbcType=CHAR},
      </if>
      <if test="contributionsFullname != null" >
        contributions_fullname = #{contributionsFullname,jdbcType=VARCHAR},
      </if>
      <if test="collaborationFullname != null" >
        collaboration_fullname = #{collaborationFullname,jdbcType=VARCHAR},
      </if>
      <if test="followersName != null" >
        followers_name = #{followersName,jdbcType=VARCHAR},
      </if>
      <if test="followingName != null" >
        following_name = #{followingName,jdbcType=VARCHAR},
      </if>
      <if test="reposFullname != null" >
        repos_fullname = #{reposFullname,jdbcType=VARCHAR},
      </if>
      <if test="publicRepos != null" >
        public_repos = #{publicRepos,jdbcType=INTEGER},
      </if>
      <if test="pubilcGists != null" >
        pubilc_gists = #{pubilcGists,jdbcType=INTEGER},
      </if>
      <if test="followers != null" >
        followers = #{followers,jdbcType=INTEGER},
      </if>
      <if test="following != null" >
        following = #{following,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="popularScore != null" >
        popular_score = #{popularScore,jdbcType=DOUBLE},
      </if>
      <if test="teamworkScore != null" >
        teamwork_score = #{teamworkScore,jdbcType=DOUBLE},
      </if>
      <if test="livenessScore != null" >
        liveness_score = #{livenessScore,jdbcType=DOUBLE},
      </if>
      <if test="experienceScore != null" >
        experience_score = #{experienceScore,jdbcType=DOUBLE},
      </if>
      <if test="quantityScore != null" >
        quantity_score = #{quantityScore,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.nju.model.User" >
    update user
    set login = #{login,jdbcType=CHAR},
      html_url = #{htmlUrl,jdbcType=CHAR},
      type = #{type,jdbcType=CHAR},
      avatar_url = #{avatarUrl,jdbcType=CHAR},
      name = #{name,jdbcType=CHAR},
      location = #{location,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      blog = #{blog,jdbcType=CHAR},
      company = #{company,jdbcType=CHAR},
      contributions_fullname = #{contributionsFullname,jdbcType=VARCHAR},
      collaboration_fullname = #{collaborationFullname,jdbcType=VARCHAR},
      followers_name = #{followersName,jdbcType=VARCHAR},
      following_name = #{followingName,jdbcType=VARCHAR},
      repos_fullname = #{reposFullname,jdbcType=VARCHAR},
      public_repos = #{publicRepos,jdbcType=INTEGER},
      pubilc_gists = #{pubilcGists,jdbcType=INTEGER},
      followers = #{followers,jdbcType=INTEGER},
      following = #{following,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      popular_score = #{popularScore,jdbcType=DOUBLE},
      teamwork_score = #{teamworkScore,jdbcType=DOUBLE},
      liveness_score = #{livenessScore,jdbcType=DOUBLE},
      experience_score = #{experienceScore,jdbcType=DOUBLE},
      quantity_score = #{quantityScore,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>